{"version":3,"sources":["firebase.js","routes/Auth.js","components/Tweet.js","components/Nav.js","components/Main-Nav.js","routes/Home.js","routes/Profile.js","routes/SignOut.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAuthorization","auth","firebaseProviders","firebaseDB","firestore","firebaseStorage","storage","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","socialLogIn","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","type","placeholder","required","onClick","prev","tweetObj","userObj","profile","profilePhoto","editing","setEditing","text","newTweet","setNewTweet","checkUser","userId","uid","deleteTweet","window","confirm","collection","doc","id","delete","imageURL","refFromURL","toggleEditing","updateTweet","update","src","userName","charAt","exact","to","tweet","setTweet","image","setImage","imageAdded","setImageAdded","fileRef","ref","child","uuid","putString","response","getDownloadURL","createdAt","Date","now","displayName","add","maxLength","accept","imageFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","Nav","Home","user","currentUser","tweets","setTweets","history","useHistory","performance","navigation","push","useEffect","unsubscribe","orderBy","onSnapshot","snapshot","tweetArray","docs","map","document","data","Tweet","getImage","setDisplayName","profilePicture","setProfilePicture","profilePictureExists","setProfilePictureExists","where","tweetNumber","length","userImage","onFileChange","updatePhoto","i","updateProfile","signOut","isLoggedIn","path","Profile","SignOut","Auth","App","initizalize","setInitialize","setIsLoggedIn","setUserObj","setProfilePhoto","onAuthStateChanged","Router","x","ReactDOM","render","StrictMode","getElementById"],"mappings":"wNAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKuBH,IAAzB,IACMS,EAAwBT,IAASU,OACjCC,EAAoBX,IAASU,KAC7BE,EAAaZ,IAASa,YACtBC,EAAkBd,IAASe,U,OCjBzB,aAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAGiBJ,oBAAS,GAH1B,mBAGZK,EAHY,KAGAC,EAHA,OAION,mBAAS,IAJhB,mBAIZO,EAJY,KAILC,EAJK,KAMbC,EAAW,SAACC,GAAO,IAAD,EAGlBA,EADFC,OAAUC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAQVC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAEM,iBADa,UAITX,EAJS,gCAKEZ,EAAsBwB,+BACjChB,EACAE,GAPS,sDAUEV,EAAsByB,2BACjCjB,EACAE,GAZS,yEAgBbK,EAAS,KAAEW,SAhBE,0DAAH,sDAoBRC,EAAW,uCAAG,WAAOV,GAAP,iBAAAK,EAAA,4DAKL,YAHDH,EACRF,EADFC,OAAUC,MAIVS,EAAW,IAAI1B,EAAkB2B,mBACf,WAATV,IACTS,EAAW,IAAI1B,EAAkB4B,oBARjB,SAUZ9B,EAAsB+B,gBAAgBH,GAV1B,2CAAH,sDAajB,OACE,qBAAKI,UAAU,sBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,iCACE,mBAAGA,UAAU,qBAEf,uBAAMX,SAAUA,EAAhB,UACE,uBACEF,KAAK,QACLc,KAAK,OACLC,YAAY,QACZC,UAAQ,EACRnB,SAAUA,EACVI,MAAOZ,IAET,uBACEW,KAAK,WACLc,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRnB,SAAUA,EACVI,MAAOV,IAET,uBACEsB,UAAU,SACVC,KAAK,SACLb,MAAOR,EAAa,iBAAmB,eAG3C,sBAAMoB,UAAU,SAASI,QAlEN,WACvBvB,GAAc,SAACwB,GAAD,OAAWA,MAiErB,SACGzB,EAAa,UAAY,mBAE3BE,EAAQ,+BAAOA,IAAgB,KAChC,sBAAKkB,UAAU,oBAAf,UACE,yBAAQI,QAAST,EAAaR,KAAK,SAAnC,0BAEE,mBAAGa,UAAU,qBAEf,yBAAQI,QAAST,EAAaR,KAAK,SAAnC,0BAEE,mBAAGa,UAAU,8B,QC9FV,cAAmD,IAAhDM,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAAmB,EACjClC,oBAAS,GADwB,mBACxDmC,EADwD,KAC/CC,EAD+C,OAE/BpC,mBAAS+B,EAASM,MAFa,mBAExDC,EAFwD,KAE9CC,EAF8C,KAIzDC,EAAY,SAACC,GAEjB,GADsBT,EAAQU,KACTD,EACnB,OAAO,GAILE,EAAW,uCAAG,sBAAA5B,EAAA,0DACM6B,OAAOC,QAC7B,+CAFgB,gCAKVjD,EAAWkD,WAAW,UAAUC,IAAIhB,EAASiB,IAAIC,SALvC,WAMZlB,EAASmB,SANG,gCAORpD,EAAgBqD,WAAWpB,EAASmB,UAAUD,SAPtC,2CAAH,qDAYXG,EAAgB,kBAAMhB,GAAW,SAACN,GAAD,OAAWA,MAE5CuB,EAAc,SAAC3C,GACnBA,EAAEM,iBACFpB,EAAWkD,WAAW,UAAUC,IAAIhB,EAASiB,IAAIM,OAAO,CAAEjB,KAAMC,IAChEF,GAAW,IAGP3B,EAAW,SAACC,GAAO,IAEXG,EACRH,EADFC,OAAUE,MAEZ0B,EAAY1B,IAGd,OACE,qCACG2B,EAAUT,EAASU,QAClB,qBAAKhB,UAAU,eAAe8B,IAAKrB,IAEnC,qBAAKT,UAAU,aAAf,SAA6BM,EAASyB,SAASC,OAAO,KAGvDxB,EACC,sBAAKR,UAAU,gBAAf,UACGe,EAAUT,EAASU,UAAYN,EAC9B,sBAAKV,UAAU,eAAf,UACE,mBAAGI,QAASc,EAAalB,UAAU,qBACnC,mBAAGI,QAASuB,EAAe3B,UAAU,mBAErC,KACHU,EACC,qBAAKV,UAAU,cAAf,SACE,uBAAMX,SAAU,SAACJ,GAAD,OAAO2C,EAAY3C,IAAnC,UACE,uBACED,SAAUA,EACViB,KAAK,OACLb,MAAOyB,EACPX,YAAY,aACZC,UAAQ,IAEV,wBAAQH,UAAU,aAAlB,SACE,mBAAGA,UAAU,qBAEf,wBAAQA,UAAU,aAAaI,QAASuB,EAAxC,yBAMJ,qCACE,sBACE3B,UACEM,EAASmB,SAAW,iBAAmB,gBAF3C,UAKE,oBAAIzB,UAAWM,EAASmB,UAAY,mBAApC,SACGnB,EAASM,OAEXN,EAASmB,UACR,qBAAKzB,UAAU,cAAc8B,IAAKxB,EAASmB,cAG/C,uBAAMzB,UAAU,aAAhB,gBACMe,EAAUT,EAASU,QAAU,MAAQV,EAASyB,kBAM1D,sBAAK/B,UAAWe,EAAUT,EAASU,QAAU,WAAa,QAA1D,UACGD,EAAUT,EAASU,UAAYN,EAC9B,sBAAKV,UAAU,eAAf,UACE,mBAAGI,QAASc,EAAalB,UAAU,qBACnC,mBAAGI,QAASuB,EAAe3B,UAAU,mBAErC,KACHU,EACC,qBAAKV,UAAU,cAAf,SACE,uBAAMX,SAAU,SAACJ,GAAD,OAAO2C,EAAY3C,IAAnC,UACE,uBACED,SAAUA,EACViB,KAAK,OACLb,MAAOyB,EACPX,YAAY,aACZC,UAAQ,IAEV,wBAAQH,UAAU,aAAlB,SACE,mBAAGA,UAAU,qBAEf,wBAAQA,UAAU,aAAaI,QAASuB,EAAxC,yBAMJ,qCACE,sBACE3B,UACEM,EAASmB,SAAW,iBAAmB,gBAF3C,UAKE,oBAAIzB,UAAWM,EAASmB,UAAY,mBAApC,SACGnB,EAASM,OAEXN,EAASmB,UACR,qBAAKzB,UAAU,cAAc8B,IAAKxB,EAASmB,cAG/C,uBAAMzB,UAAU,aAAhB,gBACMe,EAAUT,EAASU,QAAU,MAAQV,EAASyB,sB,QCrInD,aACb,OACE,8BACE,sBAAK/B,UAAU,cAAf,UACE,8BACE,cAAC,IAAD,CAASiC,OAAK,EAACjC,UAAU,UAAUkC,GAAG,IAAtC,SACE,mBAAGlC,UAAU,iCAGjB,8BACE,cAAC,IAAD,CAASiC,OAAK,EAACjC,UAAU,UAAUkC,GAAG,QAAtC,SACE,mBAAGlC,UAAU,6BAGjB,8BACE,cAAC,IAAD,CAASA,UAAU,UAAUkC,GAAG,YAAhC,SACE,mBAAGlC,UAAU,wCCZV,cAAkB,IAAfO,EAAc,EAAdA,QAAc,EACJhC,mBAAS,IADL,mBACvB4D,EADuB,KAChBC,EADgB,OAEJ7D,mBAAS,IAFL,mBAEvB8D,EAFuB,KAEhBC,EAFgB,OAGM/D,oBAAS,GAHf,mBAGvBgE,EAHuB,KAGXC,EAHW,KAiCxBnD,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACfL,EAAEM,kBAEEgD,EAHW,wBAIPE,EAAUpE,EAAgBqE,MAAMC,MAAtB,UAA+BpC,EAAQU,IAAvC,YAA8C2B,gBAJjD,SAKUH,EAAQI,UAAUR,EAAO,YALnC,cAKPS,EALO,gBAMUA,EAASJ,IAAIK,iBANvB,OAMPtB,EANO,OAObnB,EAAW,CACTM,KAAMuB,EACNa,UAAWC,KAAKC,MAChBlC,OAAQT,EAAQU,IAChBc,SAAUxB,EAAQ4C,aAAe5C,EAAQ/B,MACzCiD,YAGFa,EAAS,IAfI,wBAiBbhC,EAAW,CACTM,KAAMuB,EACNa,UAAWC,KAAKC,MAChBlC,OAAQT,EAAQU,IAChBc,SAAUxB,EAAQ4C,aAAe5C,EAAQ/B,OArB9B,yBAwBTL,EAAWkD,WAAW,UAAU+B,IAAI9C,GAxB3B,QAyBf8B,EAAS,IAzBM,4CAAH,sDA4Bd,OACE,sBAAKpC,UAAU,UAAf,UACE,uBAAMA,UAAU,aAAaX,SAAUA,EAAvC,UACE,uBACED,MAAO+C,EACPnD,SA7DS,SAACC,GAAO,IAEXG,EACRH,EADFC,OAAUE,MAEZgD,EAAShD,IA0DHa,KAAK,OACLC,YAAY,uBACZmD,UAAW,IACXlD,UAAQ,IAETkC,GACC,sBAAKrC,UAAU,wBAAf,UACE,qBAAKA,UAAU,mBAAmB8B,IAAKO,IACvC,wBAAQjC,QA/CE,WAClBkC,EAAS,IACTE,GAAc,IA6CN,SACE,mBAAGxC,UAAU,sBAInB,wBAAOA,UAAU,eAAjB,UACE,uBACEA,UAAU,kBACVC,KAAK,OACLqD,OAAO,UACPtE,SAzEW,SAACC,GAAO,IAIrBsE,EADFtE,EADFC,OAAUsE,MAEY,GAClBC,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,SAACC,GAAmB,IAEzBC,EACRD,EADF3E,OAAU4E,OAEZxB,EAASwB,IAEXtB,GAAc,MA8DR,mBAAGxC,UAAU,qBAEf,iCACE,mBAAGA,UAAU,wBAGjB,cAAC+D,EAAD,QC5CSC,EAhDF,SAAC,GAA+B,IAA7BzD,EAA4B,EAA5BA,QAASE,EAAmB,EAAnBA,aACjBwD,EAAOjG,EAAsBkG,YADO,EAGd3F,mBAAS,IAHK,mBAGnC4F,EAHmC,KAG3BC,EAH2B,KAIpCC,EAAUC,cAuBhB,OArBmC,GAA/BC,YAAYC,WAAWvE,MACzBoE,EAAQI,KAAK,KAGfC,qBAAU,WACR,IAAMC,EAAcxG,EACjBkD,WAAW,UACXuD,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACC,GACpC,OAAO,aAAE3D,GAAI2D,EAAS3D,IAAO2D,EAASC,WAExCf,EAAUW,MAGd,OAAO,WACLJ,IACAP,EAAU,OAEX,IAGD,sBAAKpE,UAAU,eAAf,UACE,mBAAGA,UAAU,oCAAb,sBACA,cAAC,EAAD,CAAMO,QAAS0D,IACf,qBAAKjE,UAAU,mBAAf,SACGmE,EAAOc,KAAI,SAAC9C,GAAD,OACV,cAACiD,EAAD,CAEE9E,SAAU6B,EACV5B,QAASA,EACTE,aAAcA,GAHT0B,EAAMZ,SAOjB,qBAAKvB,UAAU,gBAAf,SACE,mBAAGA,UAAU,iBAAb,yBC3CO,cAA4B,IAAzBO,EAAwB,EAAxBA,QAAS8E,EAAe,EAAfA,SACnBpB,EAAOjG,EAAsBkG,YADK,EAIZ3F,mBAAS,IAJG,mBAIjC4F,EAJiC,KAIzBC,EAJyB,OAOF7F,mBAAS,IAPP,mBAOjC4E,EAPiC,KAOpBmC,EAPoB,OAUI/G,mBAAS,IAVb,mBAUjCgH,EAViC,KAUjBC,EAViB,OAWgBjH,oBAAS,GAXzB,mBAWjCkH,EAXiC,KAWXC,EAXW,KAiCxChB,qBAAU,WApBRvG,EACGkD,WAAW,UACXuD,QAAQ,YAAa,QACrBe,MAAM,SAAU,KAAM1B,EAAKhD,KAC3B4D,YAAW,SAACC,GACX,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAC3D,GACpC,OAAO,aAAEC,GAAID,EAAIC,IAAOD,EAAI6D,WAE9Bf,EAAUW,GACV,IAAMa,EAAcb,EAAWc,OAAS,EACpCd,EAAWc,OAAS,GAClBd,EAAWa,GAAaE,YAC1BN,EAAkBT,EAAWa,GAAaE,WAC1CJ,GAAwB,GACxBL,EAASN,EAAWa,GAAaE,eAQzCR,EAAerB,EAAKd,aAAec,EAAKzF,SACvC,IAEH,IAAMuH,EAAe,SAAC9G,GAAO,IAIrBsE,EADFtE,EADFC,OAAUsE,MAEY,GAClBC,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,SAACC,GAAmB,IAEzBC,EACRD,EADF3E,OAAU4E,OAEZ0B,EAAkB1B,GAClB4B,GAAwB,KAItBM,EAAc,SAAC/G,GACnBA,EAAEM,iBACF,IAAK,IAAI0G,EAAI,EAAGA,EAAI9B,EAAO0B,OAAQI,IACjC9H,EACGkD,WAAW,UACXC,IAAI6C,EAAO8B,GAAG1E,IACdM,OAAO,CAAEiE,UAAWP,IAEzBG,GAAwB,IAGpBrG,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAEM,kBACE0E,EAAKd,aAAec,EAAKzF,QAAU2E,EAFxB,gCAGPc,EAAKiC,cAAc,CACvB/C,gBAJW,OAMbmC,EAAerB,EAAKd,aANP,2CAAH,sDAiBd,OACE,sBAAKnD,UAAU,kBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,2CACYmE,EAAO0B,OADnB,IAC2B,mBAAG7F,UAAU,mBACrCmE,EAAO0B,OAAS,GAAK,QAEvB1B,EAAOc,KAAI,SAAC9C,GAAD,OACV,cAACiD,EAAD,CAEE9E,SAAU6B,EACV5B,QAASA,EACTC,SAAS,EACTC,aAAc8E,GAJTpD,EAAMZ,UAQjB,sBAAKvB,UAAU,oBAAf,UACE,2DAA8BmD,EAA9B,OACCsC,EACC,qBAAKzF,UAAU,kBAAf,SACE,uBAAMX,SAAU2G,EAAhB,UACE,wBAAOhG,UAAU,4BAAjB,UACE,uBACEuB,GAAG,wBACHtB,KAAK,OACLqD,OAAO,UACPtE,SAAU+G,IAEZ,qBAAKjE,IAAKyD,OAEZ,iEAIJ,qBAAKvF,UAAU,kBAAf,SACE,uBAAMX,SAAU2G,EAAhB,UACE,wBAAOhG,UAAU,4BAAjB,UACE,uBACEuB,GAAG,wBACHtB,KAAK,OACLqD,OAAO,UACPtE,SAAU+G,IAEZ,6DAEF,iEAIN,uBAAM1G,SAAUA,EAAhB,UACE,uBACEL,SA3DO,SAACC,GAAO,IAEXG,EACRH,EADFC,OAAUE,MAEZkG,EAAelG,IAwDPa,KAAK,OACLC,YAAY,eACZd,MAAO+D,IAET,iCACE,mBAAGnD,UAAU,8BAInB,cAAC,EAAD,CAAMO,QAAS0D,IACf,qBAAKjE,UAAU,gBAAf,SACE,mBAAGA,UAAU,iBAAb,yBCrJO,aACb,IAAMqE,EAAUC,cAUhB,OACE,qBAAKtE,UAAU,qBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sDACA,gCACE,yBAAQI,QAdA,WACdpC,EAAsBmI,UACtB9B,EAAQI,KAAK,MAYP,iBACM,mBAAGzE,UAAU,oBAEnB,yBAAQI,QAZG,WACjBiE,EAAQI,KAAK,MAWP,mCACwB,mBAAGzE,UAAU,+BCbhC,cAAsD,IAAnDoG,EAAkD,EAAlDA,WAAY7F,EAAsC,EAAtCA,QAAS8E,EAA6B,EAA7BA,SAAU5E,EAAmB,EAAnBA,aAC/C,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACG2F,EACC,qCACE,cAAC,IAAD,CAAOnE,OAAK,EAACoE,KAAK,IAAlB,SACE,cAACC,EAAD,CAAS/F,QAASA,EAAS8E,SAAUA,MAEvC,eAAC,IAAD,CAAOpD,OAAK,EAACoE,KAAK,QAAlB,UACE,cAAC,EAAD,CACE9F,QAASA,EACTE,aAAcA,EACd4E,SAAUA,IACT,OAEL,cAAC,IAAD,CAAOpD,OAAK,EAACoE,KAAK,YAAlB,SACE,cAACE,EAAD,SAIJ,cAAC,IAAD,CAAOtE,OAAK,EAACoE,KAAK,IAAlB,SACE,cAACG,EAAD,WCgBGC,MA7Cf,WAAgB,IAAD,EACwBlI,oBAAS,GADjC,mBACNmI,EADM,KACOC,EADP,OAEuBpI,oBAAS,GAFhC,mBAEN6H,EAFM,KAEMQ,EAFN,OAGiBrI,mBAAS,MAH1B,mBAGNgC,EAHM,KAGGsG,EAHH,OAI2BtI,mBAAS,IAJpC,mBAINkC,EAJM,KAIQqG,EAJR,KAyBb,OAnBApC,qBAAU,WACR,IAAMC,EAAc3G,EAAsB+I,oBAAmB,SAAC9C,GACxDA,GACF2C,GAAc,GACdC,EAAW5C,IAEX2C,GAAc,GAEhBD,GAAc,MAEhB,OAAO,WACLhC,OAED,IAOD,qCACG+B,EACC,cAACM,EAAD,CACEZ,WAAYA,EACZ7F,QAASA,EACT8E,SAVS,SAAC4B,GAChBH,EAAgBG,IAUVxG,aAAcA,IAGhB,kBAEF,sBAAKT,UAAU,UAAf,UACE,mBAAGA,UAAU,mBACb,iECvCRkH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,W","file":"static/js/main.605a67bd.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const firebaseAuthorization = firebase.auth();\nexport const firebaseProviders = firebase.auth;\nexport const firebaseDB = firebase.firestore();\nexport const firebaseStorage = firebase.storage();\n","import React, { useState } from \"react\";\nimport { firebaseAuthorization, firebaseProviders } from \"../firebase\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const toggleUserMethod = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await firebaseAuthorization.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await firebaseAuthorization.signInWithEmailAndPassword(\n          email,\n          password\n        );\n      }\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  const socialLogIn = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseProviders.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseProviders.GithubAuthProvider();\n    }\n    await firebaseAuthorization.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"auth-form-container\">\n      <div className=\"auth-form\">\n        <header>\n          <i className=\"fab fa-twitter\"></i>\n        </header>\n        <form onSubmit={onSubmit}>\n          <input\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Email\"\n            required\n            onChange={onChange}\n            value={email}\n          />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            onChange={onChange}\n            value={password}\n          />\n          <input\n            className=\"button\"\n            type=\"submit\"\n            value={newAccount ? \"Create Account\" : \"Sign in\"}\n          />\n        </form>\n        <span className=\"button\" onClick={toggleUserMethod}>\n          {newAccount ? \"Sign in\" : \"Create Account\"}\n        </span>\n        {error ? <span>{error}</span> : null}\n        <div className=\"auth-form-buttons\">\n          <button onClick={socialLogIn} name=\"google\">\n            Continue with\n            <i className=\"fab fa-google\"></i>\n          </button>\n          <button onClick={socialLogIn} name=\"github\">\n            Continue with\n            <i className=\"fab fa-github\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { firebaseDB, firebaseStorage } from \"../firebase\";\n\nexport default ({ tweetObj, userObj, profile, profilePhoto }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n  const checkUser = (userId) => {\n    const currentUserId = userObj.uid;\n    if (currentUserId == userId) {\n      return true;\n    }\n  };\n\n  const deleteTweet = async () => {\n    const confirmToDelete = window.confirm(\n      \"Are you sure you want to delete this Tweet?\"\n    );\n    if (confirmToDelete) {\n      await firebaseDB.collection(\"tweets\").doc(tweetObj.id).delete();\n      if (tweetObj.imageURL) {\n        await firebaseStorage.refFromURL(tweetObj.imageURL).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const updateTweet = (e) => {\n    e.preventDefault();\n    firebaseDB.collection(\"tweets\").doc(tweetObj.id).update({ text: newTweet });\n    setEditing(false);\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewTweet(value);\n  };\n\n  return (\n    <>\n      {checkUser(tweetObj.userId) ? (\n        <img className=\"current-user\" src={profilePhoto} />\n      ) : (\n        <div className=\"other-user\">{tweetObj.userName.charAt(0)}</div>\n      )}\n\n      {profile ? (\n        <div className=\"profile-tweet\">\n          {checkUser(tweetObj.userId) && !editing ? (\n            <div className=\"edit-buttons\">\n              <i onClick={deleteTweet} className=\"fas fa-trash-alt\"></i>\n              <i onClick={toggleEditing} className=\"fas fa-edit\"></i>\n            </div>\n          ) : null}\n          {editing ? (\n            <div className=\"update-form\">\n              <form onSubmit={(e) => updateTweet(e)}>\n                <input\n                  onChange={onChange}\n                  type=\"text\"\n                  value={newTweet}\n                  placeholder=\"Edit Tweet\"\n                  required\n                />\n                <button className=\"update-btn\">\n                  <i className=\"fab fa-twitter\"></i>\n                </button>\n                <button className=\"cancel-btn\" onClick={toggleEditing}>\n                  Cancel\n                </button>\n              </form>\n            </div>\n          ) : (\n            <>\n              <div\n                className={\n                  tweetObj.imageURL ? \"tweet-contents\" : \"tweet-content\"\n                }\n              >\n                <h2 className={tweetObj.imageURL && \"tweet-with-photo\"}>\n                  {tweetObj.text}\n                </h2>\n                {tweetObj.imageURL && (\n                  <img className=\"tweet-image\" src={tweetObj.imageURL} />\n                )}\n              </div>\n              <span className=\"tweet-user\">\n                by {checkUser(tweetObj.userId) ? \"you\" : tweetObj.userName}\n              </span>\n            </>\n          )}\n        </div>\n      ) : (\n        <div className={checkUser(tweetObj.userId) ? \"my-tweet\" : \"tweet\"}>\n          {checkUser(tweetObj.userId) && !editing ? (\n            <div className=\"edit-buttons\">\n              <i onClick={deleteTweet} className=\"fas fa-trash-alt\"></i>\n              <i onClick={toggleEditing} className=\"fas fa-edit\"></i>\n            </div>\n          ) : null}\n          {editing ? (\n            <div className=\"update-form\">\n              <form onSubmit={(e) => updateTweet(e)}>\n                <input\n                  onChange={onChange}\n                  type=\"text\"\n                  value={newTweet}\n                  placeholder=\"Edit Tweet\"\n                  required\n                />\n                <button className=\"update-btn\">\n                  <i className=\"fab fa-twitter\"></i>\n                </button>\n                <button className=\"cancel-btn\" onClick={toggleEditing}>\n                  Cancel\n                </button>\n              </form>\n            </div>\n          ) : (\n            <>\n              <div\n                className={\n                  tweetObj.imageURL ? \"tweet-contents\" : \"tweet-content\"\n                }\n              >\n                <h2 className={tweetObj.imageURL && \"tweet-with-photo\"}>\n                  {tweetObj.text}\n                </h2>\n                {tweetObj.imageURL && (\n                  <img className=\"tweet-image\" src={tweetObj.imageURL} />\n                )}\n              </div>\n              <span className=\"tweet-user\">\n                by {checkUser(tweetObj.userId) ? \"you\" : tweetObj.userName}\n              </span>\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default () => {\n  return (\n    <nav>\n      <div className=\"nav-buttons\">\n        <div>\n          <NavLink exact className=\"nav-btn\" to=\"/\">\n            <i className=\"nav-icon fas fa-user-alt\"></i>\n          </NavLink>\n        </div>\n        <div>\n          <NavLink exact className=\"nav-btn\" to=\"/home\">\n            <i className=\"nav-icon fas fa-home\"></i>\n          </NavLink>\n        </div>\n        <div>\n          <NavLink className=\"nav-btn\" to=\"/sign-out\">\n            <i className=\"nav-icon fas fa-power-off\"></i>\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { firebaseStorage, firebaseDB } from \"../firebase\";\n\n// Components\nimport Nav from \"./Nav\";\n\nexport default ({ userObj }) => {\n  const [tweet, setTweet] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [imageAdded, setImageAdded] = useState(false);\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setTweet(value);\n  };\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const imageFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(imageFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        target: { result },\n      } = finishedEvent;\n      setImage(result);\n    };\n    setImageAdded(true);\n  };\n\n  const removeImage = () => {\n    setImage(\"\");\n    setImageAdded(false);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let tweetObj;\n    if (imageAdded) {\n      const fileRef = firebaseStorage.ref().child(`${userObj.uid}/${uuid()}`);\n      const response = await fileRef.putString(image, \"data_url\");\n      const imageURL = await response.ref.getDownloadURL();\n      tweetObj = {\n        text: tweet,\n        createdAt: Date.now(),\n        userId: userObj.uid,\n        userName: userObj.displayName || userObj.email,\n        imageURL,\n      };\n\n      setImage(\"\");\n    } else {\n      tweetObj = {\n        text: tweet,\n        createdAt: Date.now(),\n        userId: userObj.uid,\n        userName: userObj.displayName || userObj.email,\n      };\n    }\n    await firebaseDB.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n  };\n\n  return (\n    <div className=\"nav-bar\">\n      <form className=\"tweet-form\" onSubmit={onSubmit}>\n        <input\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n          required\n        />\n        {image && (\n          <div className=\"image-tweet-container\">\n            <img className=\"tweet-form-image\" src={image} />\n            <button onClick={removeImage}>\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </div>\n        )}\n        <label className=\"upload-photo\">\n          <input\n            className=\"add-image-tweet\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n          />\n          <i className=\"fas fa-camera\"></i>\n        </label>\n        <button>\n          <i className=\"fab fa-twitter\"></i>\n        </button>\n      </form>\n      <Nav />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseDB, firebaseAuthorization } from \"../firebase\";\n\n// Components\nimport Tweet from \"../components/Tweet\";\nimport Main from \"../components/Main-Nav\";\n\nconst Home = ({ userObj, profilePhoto }) => {\n  const user = firebaseAuthorization.currentUser;\n\n  const [tweets, setTweets] = useState([]);\n  const history = useHistory();\n\n  if (performance.navigation.type == 1) {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebaseDB\n      .collection(\"tweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const tweetArray = snapshot.docs.map((document) => {\n          return { id: document.id, ...document.data() };\n        });\n        setTweets(tweetArray);\n      });\n\n    return () => {\n      unsubscribe();\n      setTweets([]);\n    };\n  }, []);\n\n  return (\n    <div className=\"tweeter-home\">\n      <i className=\"twitter-icon-large fab fa-twitter\">#Tweeter</i>\n      <Main userObj={user} />\n      <div className=\"tweets-container\">\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            userObj={userObj}\n            profilePhoto={profilePhoto}\n          />\n        ))}\n      </div>\n      <div className=\"splash-screen\">\n        <i className=\"fab fa-twitter\">Clone</i>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { firebaseDB, firebaseAuthorization } from \"../firebase\";\n\n// Components\nimport Tweet from \"../components/Tweet\";\nimport Main from \"../components/Main-Nav\";\n\nexport default ({ userObj, getImage }) => {\n  const user = firebaseAuthorization.currentUser;\n\n  // Tweets\n  const [tweets, setTweets] = useState([]);\n\n  // Change user's display name\n  const [displayName, setDisplayName] = useState(\"\");\n\n  // Change user's photo\n  const [profilePicture, setProfilePicture] = useState(\"\");\n  const [profilePictureExists, setProfilePictureExists] = useState(false);\n  const getTweets = () => {\n    firebaseDB\n      .collection(\"tweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .where(\"userId\", \"==\", user.uid)\n      .onSnapshot((snapshot) => {\n        const tweetArray = snapshot.docs.map((doc) => {\n          return { id: doc.id, ...doc.data() };\n        });\n        setTweets(tweetArray);\n        const tweetNumber = tweetArray.length - 1;\n        if (tweetArray.length > 0) {\n          if (tweetArray[tweetNumber].userImage) {\n            setProfilePicture(tweetArray[tweetNumber].userImage);\n            setProfilePictureExists(true);\n            getImage(tweetArray[tweetNumber].userImage);\n          }\n        }\n      });\n  };\n\n  useEffect(() => {\n    getTweets();\n    setDisplayName(user.displayName || user.email);\n  }, []);\n\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const imageFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(imageFile);\n    reader.onloadend = (finishedEvent) => {\n      const {\n        target: { result },\n      } = finishedEvent;\n      setProfilePicture(result);\n      setProfilePictureExists(true);\n    };\n  };\n\n  const updatePhoto = (e) => {\n    e.preventDefault();\n    for (let i = 0; i < tweets.length; i++) {\n      firebaseDB\n        .collection(\"tweets\")\n        .doc(tweets[i].id)\n        .update({ userImage: profilePicture });\n    }\n    setProfilePictureExists(true);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (user.displayName || user.email !== displayName) {\n      await user.updateProfile({\n        displayName,\n      });\n      setDisplayName(user.displayName);\n    }\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setDisplayName(value);\n  };\n\n  return (\n    <div className=\"tweeter-profile\">\n      <div className=\"tweets-container\">\n        <h2>\n          You have {tweets.length} <i className=\"fab fa-twitter\"></i>\n          {tweets.length > 1 && \"'s\"}\n        </h2>\n        {tweets.map((tweet) => (\n          <Tweet\n            key={tweet.id}\n            tweetObj={tweet}\n            userObj={userObj}\n            profile={true}\n            profilePhoto={profilePicture}\n          />\n        ))}\n      </div>\n      <div className=\"profile-container\">\n        <h1>How are you doing today, {displayName}?</h1>\n        {profilePictureExists ? (\n          <div className=\"image-container\">\n            <form onSubmit={updatePhoto}>\n              <label className=\"profile-picture-container\">\n                <input\n                  id=\"profile-picture-input\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={onFileChange}\n                />\n                <img src={profilePicture} />\n              </label>\n              <button>Update profile picture</button>\n            </form>\n          </div>\n        ) : (\n          <div className=\"image-container\">\n            <form onSubmit={updatePhoto}>\n              <label className=\"profile-picture-container\">\n                <input\n                  id=\"profile-picture-input\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={onFileChange}\n                />\n                <h2>Add your profile picture</h2>\n              </label>\n              <button>Update profile picture</button>\n            </form>\n          </div>\n        )}\n        <form onSubmit={onSubmit}>\n          <input\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"Display Name\"\n            value={displayName}\n          />\n          <button>\n            <i className=\"fas fa-pencil-alt\"></i>\n          </button>\n        </form>\n      </div>\n      <Main userObj={user} />\n      <div className=\"splash-screen\">\n        <i className=\"fab fa-twitter\">Clone</i>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseAuthorization } from \"../firebase\";\n\nexport default () => {\n  const history = useHistory();\n  const signOut = () => {\n    firebaseAuthorization.signOut();\n    history.push(\"/\");\n  };\n\n  const returnHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"sign-out-container\">\n      <div className=\"sign-out\">\n        <h1>Heading out so soon?</h1>\n        <div>\n          <button onClick={signOut}>\n            Yes <i className=\"far fa-frown\"></i>\n          </button>\n          <button onClick={returnHome}>\n            No, bring me back home<i className=\"fab fa-twitter\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Routes\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\n\n// Components\nimport SignOut from \"../routes/SignOut\";\n\nexport default ({ isLoggedIn, userObj, getImage, profilePhoto }) => {\n  return (\n    <Router>\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Profile userObj={userObj} getImage={getImage} />\n            </Route>\n            <Route exact path=\"/home\">\n              <Home\n                userObj={userObj}\n                profilePhoto={profilePhoto}\n                getImage={getImage}\n              />{\" \"}\n            </Route>\n            <Route exact path=\"/sign-out\">\n              <SignOut />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport Router from \"./Router\";\nimport { firebaseAuthorization } from \"../firebase\";\n\nfunction App() {\n  const [initizalize, setInitialize] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [profilePhoto, setProfilePhoto] = useState(\"\");\n\n  useEffect(() => {\n    const unsubscribe = firebaseAuthorization.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInitialize(true);\n    });\n    return function cleanup() {\n      unsubscribe();\n    };\n  }, []);\n\n  const getImage = (x) => {\n    setProfilePhoto(x);\n  };\n\n  return (\n    <>\n      {initizalize ? (\n        <Router\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          getImage={getImage}\n          profilePhoto={profilePhoto}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <div className=\"overlay\">\n        <i className=\"fab fa-twitter\"></i>\n        <h1>YOUR SCREEN IS TOO small</h1>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}